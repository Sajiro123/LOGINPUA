
@{
    ViewBag.Title = "ViajesPromediados";
    Layout = "~/Views/Shared/_LayoutInicial.cshtml";
    //Layout = "~/Views/Shared/_Layout_corredores_Supervisor.cshtml";
}

<style>
    .modal-dialog {
        max-width: max-content !important;
    }

    .modal-content input {
        width: 413px;
    }

    .row{
        margin-left: 0px !important;
        margin-right: 0px !important;
    }

    /*.sombraContenedor {
        background-color: white;
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    }

    .modal-content input {
        width: auto !important;
    }

    .thead-azul-claro th {
        color: white;
        background-color: #2f6f9dd9;
        border-color: #777;
    }

    a {
        color: white !important;
    }

    .dropdown-item {
        color: black !important;
    }*/
</style>
@*<link href="~/Content/plugins/datepicker/bootstrap-datepicker3.min.css" rel="stylesheet" />
<link href="~/Content/plugins/sweetAlert/sweetalert2.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
<link href="~/Content/plugins/datepicker/bootstrap-datepicker3.min.css" rel="stylesheet" />

<script src="~/Content/plugins/sweetAlert/sweetalert2.js"></script>
<script src="~/Content/plugins/datepicker/bootstrap-datepicker.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.4/xlsx.core.min.js"></script>
<script src="~/Scripts/exportar_excel/FileSaver.js"></script>
<script src="~/Scripts/exportar_excel/jhxlsx.js"></script>
<script src="~/Content/plugins/datepicker/bootstrap-datepicker.min.js"></script>
<script src="~/Content/plugins/moment/moment.js"></script>
<script src="~/Scripts/Utilidades/Util.js"></script>*@

@{
    List<ENTIDADES.CC_RUTA_CORREDOR> listRutas = new List<ENTIDADES.CC_RUTA_CORREDOR>();
    listRutas = ViewBag.rutas;
}
<br />
<div class="row">
    <div class="col-md-12 text-center">
        <h4>
            REPORTE DE VELOCIDADES&nbsp;&nbsp;&nbsp;
        </h4>
    </div>
</div>

<div class="row" style="padding-bottom:16px;">

    <div class="col-md-2">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" title="Corredor"><span class="far fa-hospital" aria-hidden="true"></span></span>
            </div>
            <select class="form-control form-control-sm" id="selectCorredores" onchange="getRutaPorCorredor();"></select>
        </div>
    </div>

    <div class="col-md-2">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" title="Ruta"><span class="fas fa-road" aria-hidden="true"></span></span>
            </div>
            <select class="form-control form-control-sm" onchange="cambioDeRuta();" id="selectRutas">
                @*@foreach (var item in listRutas)
                {
                    <option value="@item.ID_RUTA">@item.ABREV_CORREDOR   @item.NRO_RUTA</option>
                }*@
            </select>
        </div>
    </div>

    <div class="col-md-2">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1"><span class="fa fa-calendar"></span></span>
            </div>
            <input type="text" id="txtFechaConsultaIni" value="01/08/2019" class="form-control form-control-sm" aria-label="Username" aria-describedby="basic-addon1">
        </div>
        @*<select class="form-control form-control-sm" id="selectCorredores" hidden>
            @foreach (var item in Model)
            {
                <option value="@item.ID_CORREDOR">@item.ABREVIATURA</option>
            }
        </select>*@
    </div>

    <div class="col-md-2">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1"><span class="fa fa-calendar"></span></span>
            </div>
            <input type="text" id="txtFechaConsultaFin" value="@DateTime.Now.ToString("dd/MM/yyyy")" class="form-control form-control-sm" aria-label="Username" aria-describedby="basic-addon1">
        </div>
    </div>

    <div class="col-md-2">
        <div class="input-group mb-2">
            <div class="input-group-prepend">
                <span class="input-group-text" title="Salto de horas consulta" id="basic-addon1"><svg class="svg-inline--fa fa-clock fa-w-16" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="clock" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm57.1 350.1L224.9 294c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v137.7l63.5 46.2c5.4 3.9 6.5 11.4 2.6 16.8l-28.2 38.8c-3.9 5.3-11.4 6.5-16.8 2.6z"></path></svg><!-- <span class="fas fa-clock" aria-hidden="true"></span> --></span>
            </div>
            <select class="form-control form-control-sm" id="selectHoraSalto">
                <option value="15">15 Minutos</option>
                <option value="30">30 Minutos</option>
                <option value="60" selected="">1 Hora</option>
                <option value="120">2 Horas</option>
            </select>
        </div>
    </div>

    <div class="col-md-1" style="display: contents;">
        <a href="#" id="consultar" class="btn btn-info btn-sm" data-toggle="modal" onclick="getViajesPorRuta();">Consultar</a>
    </div>
    <div class="col-md-1 text-right">
        <a href="" id="exportar" class="btn btn-success btn-sm" data-toggle="modal" onclick="exportarTabla();">Exportar</a>
    </div>

</div>

<div class="row">

    <div class="col-md-2">
        <div class="input-group mb-2">
            <div class="input-group-prepend">
                <span class="input-group-text" title="Lado"><span class="fas fa-project-diagram" aria-hidden="true"></span></span>
            </div>
            <select class="form-control form-control-sm" id="selectLado" onchange="getParaderosxRuta($('#selectRutas').val())">
                <option value="A">A</option>
                <option value="B">B</option>
            </select>
        </div>
    </div>

    <div class="col-md-2">
        <div class="input-group mb-2">
            <div class="input-group-prepend">
                <span class="input-group-text" title="Paradero inicial"><span class="fab fa-product-hunt" aria-hidden="true"></span></span>
            </div>
            <select class="form-control form-control-sm" id="selectParaderoIni"></select>
        </div>
    </div>

    <div class="col-md-2">
        <div class="input-group mb-2">
            <div class="input-group-prepend">
                <span class="input-group-text" title="Paradero final"><span class="fab fa-product-hunt" aria-hidden="true"></span></span>
            </div>
            <select class="form-control form-control-sm" id="selectParaderoFin"></select>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="table-responsive">
        <table class="responsive-table" id="tbViajesPromediados" style="width:100%">
            <thead class="thead-azul-claro text-center">
                <tr>
                    <th rowspan="2" style="vertical-align:middle;">FECHA</th>
                    <th rowspan="2" style="vertical-align:middle;">CORREDOR</th>
                    <th rowspan="2" class="text-center" style="vertical-align:middle;">RUTA</th>
                    <th colspan="2" class="text-center">HORA</th>
                    <th colspan="1" class="text-center">DISTANCIA</th>
                    <th colspan="1" class="text-center">VELOCIDAD PROM</th>
                    <th colspan="1" class="text-center">TIEMPO PROM</th>
                </tr>
                
                <tr>
                    <th class="text-center">INI</th>
                    <th class="text-center">FIN</th>
                    <th class="text-center texto-sentido">AB</th>
                    <th class="text-center texto-sentido">AB</th>
                    <th class="text-center texto-sentido">AB</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="13" class="text-center">Presionar el boton Consultar para obtener la información.</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script src="~/Content/dataPruebas/viajesCorredores.js"></script>

<script>
    //
    var fechaConsulta = '10/09/2019';//fecha temp para calculos del timestamp
    var HORA_OPERACIONES = {
        inicio: '04:00:00',
        fin: '23:59:00'
    };
    //
    var PROMEDIADO_COMPARATIVO = {
        A: [],
        B: []
        //COMPARATIVO_A: {
        //    A: [],
        //    B: []
        //},
        //COMPARATIVO_B: {
        //    A: [],
        //    B: []
        //}
    }

    var DATA_VIAJES = {
        TURNO: {
            MAÑANA: {
                arr: [],
                minimo: null,
                maximo: null
            },
            TARDE: {
                arr: [],
                minimo: null,
                maximo: null
            }
        }
    };

    var util = new Util();
    var FECHA_HOY = '@DateTime.Now.ToString("dd/MM/yyyy")';
    @{ HtmlString dataCorredores = new HtmlString(ViewBag.corredores); }
    var JSON_DATA_CORREDORES = JSON.parse('@dataCorredores');
    var URL_GET_RUTA_X_CORREDOR = "@Url.Action("getRutaxCorredor", "Programacion")";

    $(document).ready(function () {
        //$('#txtFechaConsultaIni').val('06/01/2020');//DURITO
        //$('#txtFechaConsultaFin').val('06/01/2020');//DURITO
        $('#txtFechaConsultaIni, #txtFechaConsultaFin').datepicker({
            endDate: new Date(FECHA_HOY.split('/')[1] + "/" + FECHA_HOY.split('/')[0] + "/" + FECHA_HOY.split('/')[2]),
            format: "dd/mm/yyyy"
        });
        //
        getCorredoresByModalidad();
    });
    //

    function getViajesPorRuta() {
        if ($('#txtFechaConsultaFin').val().length == 0 || $('#txtFechaConsultaIni').val().length == 0) {
            Swal.fire({
                type: 'warning',
                text: 'Verificar las fechas ingresadas',
                showConfirmButton: false,
                timer: 2000
            });
            return;
        }
        $('#tbViajesPromediados tbody').empty();
        var dataHoras = util.obtenerHorasEnTimestamp(fechaConsulta + ' ' + HORA_OPERACIONES.inicio, fechaConsulta + ' ' + HORA_OPERACIONES.fin, $('#selectHoraSalto').val());
        $('#consultar').prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>Consultando...');
        $('#tbViajesPromediados tbody').append('<tr><td colspan="13" class="text-center"><span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Cargando ...</td></tr>');
        //
        if ($('#selectLado').val() == 'A') { $('.texto-sentido').text('AB'); } else { $('.texto-sentido').text('BA'); }//para que cambie la etiqueta del THEAD 
        //
        $.ajax({
            url: '@Url.Action("getViajesPorRuta", "Salida")',
            dataType: 'text',
            data: {
                id_ruta: $('#selectRutas').val(),
                fechaInicio: $('#txtFechaConsultaIni').val(),
                fechaFin: $('#txtFechaConsultaFin').val()
            },
            success: function (result) {
                //console.log('DATA_PRUEBA', DATA_PRUEBA);
                //  result = JSON.parse(DATA_PRUEBA);
                //result = DATA_PRUEBA;
                $('#tbViajesPromediados tbody').empty();
                $('#consultar').prop('disabled', false).html('Consultar');
                HTML_TABLA_PRINCIPAL = '';

                var dataJSON = JSON.parse(result);
                if (dataJSON['dt0'].length == 0) {
                    $('#tbViajesPromediados tbody').append('<tr><td colspan="13" class="text-center">No hay información para mostrar</td></tr>');
                    return;
                }
                //

                var nroOrdenParaderoIniSelec = Number($("#selectParaderoIni option:selected").text().split('.-')[0]);
                var nroOrdenParaderoFinSelec = Number($("#selectParaderoFin option:selected").text().split('.-')[0]);
                var dataPorFecha = _.groupBy(dataJSON['dt0'], function (d) { return d.FECHA })  //agrupado por fechas la data del comparativo A
                //
                var registros = dataJSON['dt0'].length;

                PROMEDIADO_COMPARATIVO = {
                    A: [],
                    B: []
                }
                DATA_VIAJES = { //para obtener todas las salidas en timestamp agrupados por turno mañana o tarde
                    TURNO: {
                        MAÑANA: {
                            arr: [],
                            minimo: null,
                            maximo: null
                        },
                        TARDE: {
                            arr: [],
                            minimo: null,
                            maximo: null
                        }
                    }
                };
                //calculando la diferencia de dias
                var diferenciaTimestamp = util.convertDatetoTimeStamp($('#txtFechaConsultaFin').val() + ' 00:00:00') - util.convertDatetoTimeStamp($('#txtFechaConsultaIni').val() + ' 00:00:00');
                var diferenciaEnDias = (((((diferenciaTimestamp / 1000) / 60) / 60)) / 24);//minutos
                var diferenciaTimestamp = util.convertDatetoTimeStamp($('#txtFechaConsultaFin').val() + ' 00:00:00') - util.convertDatetoTimeStamp($('#txtFechaConsultaIni').val() + ' 00:00:00');
                var fechasEnConsulta = incrementarDias($('#txtFechaConsultaIni').val(), diferenciaEnDias);
                //
                var htmlRpta = '';
                if (registros > 0) {
                    fechasEnConsulta.forEach(function (fecha, i) {
                        var aux_id_tab = fecha.split('/')[0] + fecha.split('/')[1];
                        aux_id_tab = aux_id_tab.trim();
                        var fechaConsulta = fecha.trim();
                        var dataComparativoAxFecha = dataPorFecha[fechaConsulta];
                        //

                        if (dataComparativoAxFecha) {
                            htmlRpta = getPromediadoFranjaHorarias(fechaConsulta, dataPorFecha[fechaConsulta], dataHoras, nroOrdenParaderoIniSelec, nroOrdenParaderoFinSelec);
                        }
                    });
                    //
                    $('#tbViajesPromediados tbody').append(HTML_TABLA_PRINCIPAL);
                    //
                }
            }
        });
    }

    function getNroOrdenByIdParadero(idParadero) {
        var rpta = null;
        $.each(JSONparaderos, function () {
            if (idParadero == this.ID_PARADERO) {
                rpta = this;
                return false;
            }
        });
        return rpta;
    }

    function limpiarContenedorDeViajesxFranja(dataFranja) {
        $.each(dataFranja, function () {
            this.arrViajes = [];
        });
    }

    function getPromediadoFranjaHorarias(fecha, dataJSON, dataFranjaHoraria, ordenIni, ordenFin) {
        var agrupadoDataDetallePorViajes = _.groupBy(dataJSON, function (d) { return d.ID_SALIDAEJECUTADA });  //agrupado por fechas la data del comparativo A
        var idParaderoInicialSeleccionado = Number($('#selectParaderoIni').val());
        //recorriendo data por viajes
        var viajesFiltrados = [];
        //
        $.each(agrupadoDataDetallePorViajes, function (idViaje, data) {
            var itemViaje = {
                idViaje: idViaje,
                objPasoInicio: null,
                objPasoFin: null
            }

            $.each(data, function () { //recorriendo el detalle del viaje
                //aqui se valida el tramo solicitado
                var nroOrdenParaderoPaso = getNroOrdenByIdParadero(this.ID_PARADERO); //obtiene el nro de orden del paradero paso para validar los tramos de busqueda
                nroOrdenParaderoPaso = (nroOrdenParaderoPaso ? nroOrdenParaderoPaso.NRO_ORDEN : null);

                if (ordenIni == nroOrdenParaderoPaso) { //paradero inicial
                    itemViaje.objPasoInicio = this;
                }

                if (ordenFin == nroOrdenParaderoPaso) {
                    itemViaje.objPasoFin = this;
                }
            });
            viajesFiltrados.push(itemViaje); //aqui se almacena el viaje su hora inicio y hora fin segun la consulta por paraderos (ini - fin)
        });
        //obteniendo el menor viaje por lado
        var minMenorViaje = getMenorHoraDeViajeMinutos(viajesFiltrados);//viaje min por lado + 2H y 30
        //
        limpiarContenedorDeViajesxFranja(dataFranjaHoraria);

        $.each(viajesFiltrados, function (n) { //recorriendo nueva lista de viajes filtrados
            //console.log(this.objPasoInicio, this.objPasoFin)
            if (this.objPasoInicio && this.objPasoFin) {
                if (this.objPasoInicio.HORA_PASO != null && this.objPasoInicio.HORA_PASO != null) { //llenos porque sino no se puede calcular el tiempo de viaje
                    verificaViajePorFranjaHoraria(this, dataFranjaHoraria, fecha);
                }
            }
        });

        var distancias = {
            A: 0,
            B: 0
        }

        /***** get distancias segun paradero ini y fin *****/
        $.each(JSONparaderos, function () {
            var nroOrdenBusquedaIni = Number($('#selectParaderoIni option:selected').text().split('.-')[0]);
            var nroOrdenBusquedaFin = Number($('#selectParaderoFin option:selected').text().split('.-')[0]);
            var nroOrdenParaderoLista = this.NRO_ORDEN;
            var distanciaParcial = this.DISTANCIA_PARCIAL;
            if (idParaderoInicialSeleccionado == this.ID_PARADERO) {
                distanciaParcial = 0;
            }

            if ($('#selectLado').val() == this.LADO) { //verificando el LADO
                if (nroOrdenParaderoLista >= nroOrdenBusquedaIni && nroOrdenParaderoLista <= nroOrdenBusquedaFin) { //verificando el rango de busqueda tramo
                    distancias[$('#selectLado').val()] += distanciaParcial;
                }
            }
        });
        /****************************/
        console.log('dataFranjaHoraria', dataFranjaHoraria);
        distancias.B = Number(distancias.B.toFixed(3)); //dbee tener un solo formato 2 o 3 QUITARRR!!
        return getHTMLPromediadoPorFecha(distancias, dataFranjaHoraria, fecha, minMenorViaje);
    }
    //
    var HTML_TABLA_PRINCIPAL = '';
    //
    function getHTMLPromediadoPorFecha(dataDistanciasxRecorrido, dataFranjaHoraria, fecha, minutosViajeMin, etiquetaComparativo) {
        var ladoSeleccionado = $('#selectLado').val();
        var corredorSeleccionado = $('#selectCorredores option:selected').text();
        var rutaSelecionada = $('#selectRutas option:selected').text();
        var distanciaRecorridoSeleccionado = dataDistanciasxRecorrido[$('#selectLado').val()];
        var promediadoPorFranjaHoraria =
        {
            fecha: fecha,
            detalle: []
        };
        //
        var strHTML = "";
        $.each(dataFranjaHoraria, function () {
            var franjaHorariaInicioTimestamp = this.inicioTimestamp;
            var turnoFranja = this.turno;
            var velocidadKMPromedio = 0;
            var tiempoPromedio = 0;
            var tiempoPromedioMinutos = 0;
            var cantidadViajesValidos = 0;
            var item = {
                inicio: this.hInicio,
                fin: this.hFin,
                tiempo_promedio: null,
                velocidad_promedio: null
            }
            //
            strHTML += '<tr>' +
                            '<td>' + fecha + '</td>' +
                            '<td class="text-center" >' + corredorSeleccionado + '</td>' +
                            '<td class="text-center" >' + rutaSelecionada + '</td>' +
                            '<td class="text-center" style="background-color: #cae8e6;" >' + this.hInicio.split(':')[0] + ':' + this.hInicio.split(':')[1] + '</td>' +
                            '<td class="text-center" style="background-color: #cae8e6;" >' + this.hFin.split(':')[0] + ':' + this.hFin.split(':')[1] + '</td>';

            //if ((item.inicio + ' ' + item.fin) == '05:00:00 05:59:00') {
            console.log("################### " + this.hInicio + ' ' + this.hFin + " ########################");
            //}

            $.each(this.arrViajes, function () {
                var timestampFechaHoraInicio = (this.objPasoInicio.HORA_PASO ? util.convertDatetoTimeStamp(this.objPasoInicio.FECHA + ' ' + this.objPasoInicio.HORA_PASO) : null);
                var timestampFechaHoraFin = (this.objPasoFin.HORA_PASO ? util.convertDatetoTimeStamp(this.objPasoFin.FECHA + ' ' + this.objPasoFin.HORA_PASO) : null);
                var diferenciaMilisegundos = null;
                var diferenciaMinutos = null;
                var diferenciaHoras = null;
                var velocidadKM = null;
                //
                if (timestampFechaHoraInicio && timestampFechaHoraFin) {
                    diferenciaMilisegundos = timestampFechaHoraFin - timestampFechaHoraInicio;
                    if (diferenciaMilisegundos < 0) { //si es negativo
                        diferenciaMilisegundos = 0;
                        timestampFechaHoraFin = (timestampFechaHoraFin + 86400000);// 86400; //le agrega un dia
                        diferenciaMilisegundos = timestampFechaHoraFin - timestampFechaHoraInicio;
                    }
                    diferenciaMinutos = ((diferenciaMilisegundos / 1000) / 60);//minutos

                    //if (diferenciaMinutos <= minutosViajeMin && diferenciaMinutos >= 30) {//diferencia de minutos debe ser mayor de los minutos minimospor viaje y mayorigual a 30 minutos

                    if (diferenciaMinutos <= minutosViajeMin) {//diferencia de minutos debe ser mayor de los minutos minimospor viaje y mayorigual a 30 minutos
                        if (diferenciaMinutos > 0) {
                            //console.log('--->', this.objPasoInicio.FECHA + ' ' + this.objPasoInicio.HORA_PASO, this.objPasoFin.FECHA + ' ' + this.objPasoFin.HORA_PASO, diferenciaMinutos);
                            DATA_VIAJES.TURNO[turnoFranja].arr.push(franjaHorariaInicioTimestamp);
                            diferenciaHoras = (diferenciaMinutos / 60);
                            velocidadKM = (diferenciaHoras == 0 ? 0 : (distanciaRecorridoSeleccionado / diferenciaHoras));
                            //
                            //console.log(item.inicio + ' ' + item.fin)
                            velocidadKMPromedio += velocidadKM;
                            tiempoPromedio += diferenciaHoras;
                            tiempoPromedioMinutos += diferenciaMinutos;
                            cantidadViajesValidos++;
                            // if ((item.inicio + ' ' + item.fin) == '05:00:00 05:59:00') {
                            //console.log('diferenciaMinutos', diferenciaMinutos);
                            // }
                        }
                    }
                }
            });
            //


            //console.log('tiempoPromedio--->', tiempoPromedio)
            velocidadKMPromedio = (cantidadViajesValidos == 0 ? 0 : velocidadKMPromedio / cantidadViajesValidos);
            tiempoPromedio = (cantidadViajesValidos == 0 ? 0 : tiempoPromedio / cantidadViajesValidos);
            //console.log('velocidadKMPromedio', velocidadKMPromedio, 'cantidadViajesValidos', cantidadViajesValidos, 'velocidadKMPromedio', velocidadKMPromedio)
            var tiempoViajeFinal = convertHHMMSS(tiempoPromedio);
            //if ((item.inicio + ' ' + item.fin) == '05:00:00 05:59:00') {
            console.log('tiempoPromedio->', tiempoPromedio, ' tiempo FORMATO', convertToHHMM(tiempoPromedio));
            //console.log(convertToHHMM(tiempoPromedio))
            //}

            strHTML += '<td class="text-center"  >' + distanciaRecorridoSeleccionado.toFixed(2) + '</td>';
            if (velocidadKMPromedio <= 0 && tiempoPromedio <= 0) {
                strHTML += '<td colspan="2" style="background: #e9ecef;">' + "No hay información para mostrar" + '</td>';
            } else {
                strHTML += '<td>' + velocidadKMPromedio.toFixed(2) + '</td>';
                //strHTML += '<td>' + util.decimalTommss(tiempoPromedio.toFixed(1)) + '</td>';
                strHTML += '<td>' + tiempoViajeFinal + '</td>';
            }
            //
            strHTML += '</tr>';
            //
            if (tiempoPromedio > 0 && velocidadKMPromedio > 0) {
                item.tiempo_promedio = tiempoPromedio;
                item.velocidad_promedio = velocidadKMPromedio;
                //
                promediadoPorFranjaHoraria.detalle.push(item);
            }
        });
        //console.log(PROMEDIADO_COMPARATIVO);
        //console.log('--->>',promediadoPorFranjaHoraria);
        PROMEDIADO_COMPARATIVO[ladoSeleccionado].push(promediadoPorFranjaHoraria);
        HTML_TABLA_PRINCIPAL += strHTML;
        return strHTML;
    }

    function convertToHHMM(info) {
        var hrs = parseInt(Number(info));
        var min = Math.round((Number(info) - hrs) * 60);
        return hrs + ':' + min;
    }

    function convertHHMMSS(timeDecimal) {
        var rpta = null;
        var decimalTimeString = timeDecimal;
        var decimalTime = parseFloat(decimalTimeString);
        decimalTime = decimalTime * 60 * 60;
        var hours = Math.floor((decimalTime / (60 * 60)));
        decimalTime = decimalTime - (hours * 60 * 60);
        var minutes = Math.floor((decimalTime / 60));
        decimalTime = decimalTime - (minutes * 60);
        var seconds = Math.round(decimalTime);
        if (hours < 10) {
            hours = "0" + hours;
        }
        if (minutes < 10) {
            minutes = "0" + minutes;
        }
        if (seconds < 10) {
            seconds = "0" + seconds;
        }
        //alert("" + hours + ":" + minutes + ":" + seconds);
        rpta = "" + hours + ":" + minutes + ":" + seconds;
        console.log('rpta', rpta);
        return rpta;
    }

    function getMenorHoraDeViajeMinutos(viajesFiltrados) {
        var HORAS_MINUTOS = 60;
        var ladoSeleccionado = $('#selectLado').val();
        var arrTiempoViajes = {
            A: [],
            B: []
        }
        $.each(viajesFiltrados, function () {
            var timestampFechaHoraInicio = this.objPasoInicio ? (this.objPasoInicio.HORA_PASO ? util.convertDatetoTimeStamp(this.objPasoInicio.FECHA + ' ' + this.objPasoInicio.HORA_PASO) : null) : null;
            var timestampFechaHoraFin = this.objPasoFin ? (this.objPasoFin.HORA_PASO ? util.convertDatetoTimeStamp(this.objPasoFin.FECHA + ' ' + this.objPasoFin.HORA_PASO) : null) : null;
            var tiempoViajeMinutos = 0;
            var _diferenciaMilisegundos = 0;
            var _diferenciaMinutos = 0;
            //
            if (timestampFechaHoraInicio && timestampFechaHoraFin) {
                if (this.objPasoInicio.LADO == ladoSeleccionado) {
                    _diferenciaMilisegundos = timestampFechaHoraFin - timestampFechaHoraInicio;
                    if (_diferenciaMilisegundos < 0) { //si es negativo
                        _diferenciaMilisegundos = 0;
                        timestampFechaHoraFin = (timestampFechaHoraFin + 86400000);// 86400; //le agrega un dia
                        _diferenciaMilisegundos = timestampFechaHoraFin - timestampFechaHoraInicio;
                    }
                    _diferenciaMinutos = ((_diferenciaMilisegundos / 1000) / 60); //minutos
                    if (_diferenciaMinutos >= 30) {
                        arrTiempoViajes[this.objPasoInicio.LADO].push(_diferenciaMinutos);
                    }
                }
            }
        });
        var cantidadMinutosMin = (Math.min.apply(Math, arrTiempoViajes[ladoSeleccionado]) + (HORAS_MINUTOS * 2.5));
        return cantidadMinutosMin;
    }

    function verificaViajePorFranjaHoraria(objSalida, dataFranjaHoraria, fechaTemp) {

        $.each(dataFranjaHoraria, function () {
            //if (this.hInicio == '07:00:00') {
            var tmstmIniRango = util.convertDatetoTimeStamp(fechaTemp + ' ' + this.hInicio);
            var tmstmFinRango = util.convertDatetoTimeStamp(fechaTemp + ' ' + this.hFin);
            var tmstmFecSalida = util.convertDatetoTimeStamp(objSalida.objPasoInicio.FECHA + ' ' + objSalida.objPasoInicio.HORA_PASO);
            //
            if (tmstmFecSalida >= tmstmIniRango && tmstmFecSalida <= tmstmFinRango) {
                var item = objSalida;
                this.arrViajes.push(item);
            }
            //}
        });
    }

    function getParaderosxRuta(idRuta) {
        JSONparaderos = [];
        $.ajax({
            type: "POST",
            url: "@Url.Action("getParaderosByIdRuta", "Salida")",
            content: "application/json; charset=utf-8",
            dataType: "json",
            data: {
                id_ruta: idRuta,
            },
            success: function (data) {
                $('#selectParaderoIni').empty();
                $('#selectParaderoFin').empty();
                if (data.length == 0) {
                    //$('#btnConsultaHoras, #exportar').prop('disabled', true);
                    $('#selectParaderoIni, #selectParaderoFin').append('<option value="0">-- No hay información para mostrar --</option>');
                    return;
                }
                $('#btnConsultaHoras, #exportar').prop('disabled', false);
                $('#exportar').prop('disabled', true);                    //QUITAR SOLO PARA DESARROLLO

                var agrupadoPorLados = _.groupBy(data, function (d) { return d.LADO })  //agrupado por fechas la data del comparativo A
                $.each(agrupadoPorLados[$('#selectLado').val()], function (i) {
                    var item = {
                        ID_PARADERO: this.ID_PARADERO,
                        NRO_ORDEN: (this.NRO_ORDEN - 1),
                        NOMBRE: this.NOMBRE,
                        LADO: this.LADO,
                        ETIQUETA_NOMBRE: this.ETIQUETA_NOMBRE,
                        DISTANCIA_PARCIAL: this.DISTANCIA_PARCIAL
                    }
                    JSONparaderos.push(item);//nuevo json para paradero con el nro orden -1 por el terminal
                    $('#selectParaderoIni').append('<option value="' + this.ID_PARADERO + '">' + (this.NRO_ORDEN - 1) + '.- ' + this.NOMBRE + '</option>');
                    $('#selectParaderoFin').append('<option value="' + this.ID_PARADERO + '"  ' + (agrupadoPorLados[$('#selectLado').val()].length - 1 == i ? ' selected ' : '') + ' >' + (this.NRO_ORDEN - 1) + '.- ' + this.NOMBRE + '</option>');
                });
                //$('#selectParaderoIni').val(955);//DURITO
                //$('#selectParaderoFin').val(959);//DURITO
                //getViajesPorRuta();//DURITO
            }
        });
    }
    //
    function cambioDeRuta() {
        getParaderosxRuta($('#selectRutas').val())
    }

    function incrementarDias(fecha, cantidadDiasAumenta) {
        var rpta = [];
        var timestampFecha = util.convertDatetoTimeStamp(fecha + ' 00:00:00');

        var diaEnMilisegundos = ((1440 * 60) * 1000); //1 dia en milisegundos
        var fechaFormateada = util.convertTimestampToDate(timestampFecha);
        fechaFormateada = fechaFormateada.split(' ')[0];
        rpta.push(fechaFormateada);
        //
        var timestampTemp = timestampFecha;
        for (var i = 1; i <= cantidadDiasAumenta; i++) {
            timestampFecha += diaEnMilisegundos;
            var fechaFormateado = util.convertTimestampToDate(timestampFecha);
            fechaFormateado = fechaFormateado.split(' ')[0];
            rpta.push(fechaFormateado);
        }
        return rpta;
    }

    function exportarTabla() {
        tableDataExportar = [{ "sheetName": "Hoja", "data": [] }];
        var options = {
            fileName: "Reporte de velocidades " + $("#selectRutas option:selected").text() + " desde" + $('#txtFechaConsultaIni').val() + ' hasta ' + $('#txtFechaConsultaFin').val()
        };
        var tHeadExcel =
        [
            { "text": "FECHA" },
            { "text": "CORREDOR" },
            { "text": "RUTA" },
            { "text": "HORA.INI" },
            { "text": "HORA.FIN" },
            { "text": "DISTANCIA.AB" },
            { "text": "VEL PROM AB" },
            { "text": "TIEMPO PROM AB" }
        ]
        //console.log("DATA_LISTA_REGISTROS", DATA_LISTA_REGISTROS);

        tableDataExportar[0].data.push(tHeadExcel);

        $.each($('#tbViajesPromediados tbody > tr'), function () {
            var fecha = $(this).find('td').eq(0).text();
            var corredor = $(this).find('td').eq(1).text();
            var ruta = $(this).find('td').eq(2).text();
            var horaIni = $(this).find('td').eq(3).text();
            var horaFin = $(this).find('td').eq(4).text();
            var distancia_ab = $(this).find('td').eq(5).text();
            var velocidad_prom_ab = $(this).find('td').eq(6).text();
            var tiempo_prom_ab = $(this).find('td').eq(7).text();
            var itemArr = [];
            itemArr.push(
                { "text": fecha },
                { "text": corredor },
                { "text": ruta },
                { "text": horaIni },
                { "text": horaFin },
                { "text": distancia_ab },
                { "text": velocidad_prom_ab },
                { "text": (tiempo_prom_ab.length == 0 ? 'No hay información para mostrar' : tiempo_prom_ab) }
            )
            tableDataExportar[0].data.push(itemArr);
        });

        //$.each(DATA_LISTA_REGISTROS, function () {
        //    var objeto = this;
        //    var itemArr = [];
        //    itemArr.push(
        //        { "text": objeto.FECHA_REGISTRO.split(' ')[0] },
        //        { "text": objeto.ABREV_CORREDOR },
        //        { "text": objeto.NRO_RUTA },
        //        { "text": Utilidades.ConvertTimeformat24H(objeto.HINICIO) },
        //        { "text": Utilidades.ConvertTimeformat24H(objeto.HFIN) },
        //        { "text": objeto.DISTANCIA_A },
        //        { "text": objeto.DISTANCIA_B },
        //        { "text": Number(objeto.VEL_PROMEDIO_AB).toFixed(2) },
        //        { "text": Number(objeto.VEL_PROMEDIO_BA).toFixed(2) },
        //        { "text": minTommss(objeto.TIEMPO_PROM_A) },
        //        { "text": minTommss(objeto.TIEMPO_PROM_B) },
        //        { "text": objeto.USU_REG },
        //        { "text": objeto.FECHA_REG }
        //    )
        //    tableDataExportar[0].data.push(itemArr);
        //});
        Jhxlsx.export(tableDataExportar, options);
    }

    function getCorredoresByModalidad() {

        var modalidadTransporteSelecionado = $('#mod').val();
        $('#selectCorredores, #selectRuta').empty();
        var cantidadRegistros = 0;
        //
        $.each(JSON_DATA_CORREDORES, function () {
            if (this.ID_MODALIDAD_TRANS == Number(modalidadTransporteSelecionado)) {
                cantidadRegistros++;
                $('#selectCorredores').append('<option value="' + this.ID_CORREDOR + '">' + this.ABREVIATURA + '</option>');
            }
        });
        if (cantidadRegistros == 0) {
            $('#selectCorredores, #selectRuta').append('<option value="0">' + '-- No hay información --' + '</option>');
            $('#tbRutatipoServicio tbody').empty();
            return false
        }
        getRutaPorCorredor();
    }

    function getRutaPorCorredor() {

        $.ajax({
            url: URL_GET_RUTA_X_CORREDOR,
            dataType: 'json',
            data: { idCorredor: $('#selectCorredores').val() },
            success: function (result) {
                $('#selectRutas').empty();
                if (result.length == 0) { // si la lista esta vacia
                    $('#selectRutas').append('<option value="0">' + '--No hay información--' + '</option>');
                    return false;
                } else {
                    $.each(result, function () {
                        $('#selectRutas').append('<option value="' + this.ID_RUTA + '">' + this.NRO_RUTA + '</option>');
                    });
                    getParaderosxRuta($('#selectRutas').val())
                }
            }
        }, JSON);
    }
</script>